#!/bin/bash

###############################################################################################################
# {{NAME}} deamon script
# Used to start/stop the {{NAME}} service as a daemon
#
# Usage:
# service {{PATH_NAME}} (start|stop|restart|status)
#
# chkconfig: 345 90 10
# description: {{NAME}}
# generated at: {{DATE}}
#
###############################################################################################################

if [ -z /etc/rc.d/init.d/functions ]; then
  echo "Currently only RedHat deployments are setup.  Unable to find /etc/rc.d/init.d/functions"
  exit 1
fi
. /etc/rc.d/init.d/functions

if [ -e /etc/default/{{PATH_NAME}} ]; then
  . /etc/default/{{PATH_NAME}}
fi

export {{EXPORT_NAME}}_HOME=${{{EXPORT_NAME}}_HOME:-/usr/lib/{{PATH_NAME}}}
export {{EXPORT_NAME}}_CONF_DIR=${{{EXPORT_NAME}}_CONF_DIR:-/etc/{{PATH_NAME}}}
export {{EXPORT_NAME}}_LOG_DIR=${{{EXPORT_NAME}}_LOG_DIR:-/var/log/{{PATH_NAME}}}
export {{EXPORT_NAME}}_OPTS=${{{EXPORT_NAME}}_OPTS:-""}
export {{EXPORT_NAME}}_PID_FILE=${{{EXPORT_NAME}}_PID_FILE:-"/var/run/{{PATH_NAME}}.pid"}
export {{EXPORT_NAME}}_NICENESS=${{{EXPORT_NAME}}_NICENESS:-+0}

LOCK_NAME="{{PATH_NAME}}"
LOCKFILE="/var/lock/subsys/${LOCK_NAME}"


start_agent() {
  # find java
  if [ -z "${JAVA_HOME}" ] ; then
    echo "Warning: JAVA_HOME not set!"
    # Try to use Bigtop to autodetect JAVA_HOME if itâ€™s available
    if [ -e /usr/libexec/bigtop-detect-javahome ]; then
      . /usr/libexec/bigtop-detect-javahome
    elif [ -e /usr/lib/bigtop-utils/bigtop-detect-javahome ]; then
      . /usr/lib/bigtop-utils/bigtop-detect-javahome
    else
      JAVA_DEFAULT=`type -p java`
      [ -n "$JAVA_DEFAULT" ] || error "Unable to find java executable. Is it in your PATH?" 1
      JAVA_HOME=$(cd $(dirname $JAVA_DEFAULT)/..; pwd)
    fi
  fi

  JAVA=$JAVA_HOME/bin/java

  # execute {{NAME}} process
  CMD="$JAVA ${{EXPORT_NAME}}_OPTS -cp ${{EXPORT_NAME}}_CONF_DIR:${{EXPORT_NAME}}_HOME/*:${{EXPORT_NAME}}_HOME/lib/* {{CLASS_NAME}} > ${{EXPORT_NAME}}_LOG_DIR/{{PATH_NAME}}-stdout.log 2>&1 &"
  daemon ${{EXPORT_NAME}}_NICENESS --user {{RUN_AS}} --pidfile ${{EXPORT_NAME}}_PID_FILE "$CMD"

  # check if was able to start the process, if pid file exists then nothing happens but RETVAL will be 0
  RETVAL=$?
  if [ $RETVAL -eq 0 ]; then
    pid=`ps -ef | grep {{CLASS_NAME}} | grep -v grep | awk '{print $2}'`
    if [ -n "$pid" ]; then
      echo $pid > ${{EXPORT_NAME}}_PID_FILE
    fi
  else
    echo "Unable to start {{NAME}}..."
    status -p ${{EXPORT_NAME}}_PID_FILE -l $LOCK_NAME
  fi
  return $RETVAL
}

stop_agent() {
  if [ -e ${{EXPORT_NAME}}_PID_FILE ]; then
    pid=`cat ${{EXPORT_NAME}}_PID_FILE`
    count=0
    max=20
    while [ $count -lt $max ] && kill $pid 2> /dev/null ; do
      sleep 1
      count=$(( count + 1 ))
    done
    if [ $count -ge $max ]; then
      echo "Unable to stop process in time"
      return 1
    fi
  fi
  return 0
}

start() {
  echo -n $"Starting {{NAME}}: "
  start_agent
  RETVAL=$?
  [ $RETVAL -eq 0 ] && touch $LOCKFILE
  return $RETVAL
}

stop() {
  echo -n $"Stopping {{NAME}}: "
  stop_agent
  RETVAL=$?
  echo
  [ $RETVAL -eq 0 ] && rm -f $LOCKFILE ${{EXPORT_NAME}}_PID_FILE
}

checkstatus(){
  status -p ${{EXPORT_NAME}}_PID_FILE -l $LOCK_NAME
  RETVAL=$?
}

restart() {
  stop
  start
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    checkstatus
    ;;
  restart)
    restart
    ;;
  *)
    echo $"Usage: $0 {start|stop|status|restart}"
    exit 1
esac

exit $?

